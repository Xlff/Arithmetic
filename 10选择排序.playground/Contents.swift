import UIKit

/*
 找到数组中的最小数字。 从索引0开始，遍历数组中的所有数字，并追踪最小数字的位置。
 使用索引0处的数字交换最小数字。现在，已排序部分仅包含索引0处的数字。
 转到索引1处。
 找到数组其余部分中的最小数字。 从索引1开始查看。再次循环直到数组结束并追踪最小数字。
 使用索引1处的数字交换最小数字。现在，已排序部分包含两个数字，索引0和索引1。
 转到索引2处。
 从索引2开始，找到数组其余部分中的最小数字，并将其与索引2处的数字交换。现在，数组从索引0到2已排序; 此范围包含数组中的三个最小数字。
 并继续，直到没有数字需要排序。

 */


func selectSort(_ a: inout [Int]) {
    for i in 0..<a.count {
        var min = a[i]
        var index = i
        for j in i..<a.count {
            if a[j] < min {
                min = a[j]
                index = j
            }
        }
        a.swapAt(i, index)
    }
}

var a = [5,8,3,4,6]
a = [ 10, -1, 3, 9, 2, 27, 8, 5, 1, 3, 0, 26 ]
selectSort(&a)
